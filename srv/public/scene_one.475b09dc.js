function e(e,t,a,o){Object.defineProperty(e,t,{get:a,set:o,enumerable:!0,configurable:!0})}var t=globalThis.parcelRequire6b9f,a=t.register;a("dCosV",function(a,o){e(a.exports,"sceneOne",()=>w);var n=t("dHlpp"),s=t("d6hv1"),i=t("e9gtV"),l=t("BCSQM"),r=t("bGDFl"),d=t("a8Zow"),c=t("7E4Px"),m=t("i2eR4"),h=t("kcgf8"),g=t("5Vkc0"),p=t("iGzOG");function w(e,t){let a=function(e,t){let a=new p.Scene(s.AGAME.Engine);return a.enablePhysics(e,t),a.clearColor=new p.Color4(.05,.04,.06,1),a.ambientColor=new p.Color3(1,.1,1),a}(e,t),o=function(e){let t=new p.UniversalCamera("main-scene-camera",new p.Vector3(0,0,0),e);return t.position=new p.Vector3(0,10,-15),t.fov=(0,p.Tools).ToRadians(75),t.target=(0,p.Vector3).Zero(),t}(a);(0,m.cameraController)(o,a);let[l,w,S]=[...function(e){let t=new p.HemisphericLight("main-scene-hemilight",new p.Vector3(0,1,-8),e);t.diffuse=new p.Color3(1,1,1),t.specular=new p.Color3(1,1,1),t.intensity=.3;let a=new p.HemisphericLight("enemy-hemilight",new p.Vector3(0,1,-8),(0,n.GameState).scene());a.diffuse=new p.Color3(1,1,1),a.specular=new p.Color3(1,1,1),a.intensity=1,n.GameState.state.enemyLight=a;let o=new p.DirectionalLight("main-scene-dirlight",new p.Vector3(0,-1,-5),e);o.position=new p.Vector3(0,20,-20),o.diffuse=new p.Color3(1,1,1),o.specular=new p.Color3(.25,.25,.2),o.intensity=.1;let s=new p.SpotLight("left-scene-spot",new p.Vector3(-(0,n.GameState).gameBox().width/2-2,6,(0,n.GameState).gameBox().height/2+2),new p.Vector3(.5,-.5,-.5),(0,p.Tools).ToRadians(50),10,e);s.diffuse=new p.Color3(.9,.8,.7),s.specular=new p.Color3(.3,.2,.3),s.intensity=.9,s.shadowEnabled=!0;let i=new p.SpotLight("right-scene-spot",new p.Vector3((0,n.GameState).gameBox().width/2+2,6,(0,n.GameState).gameBox().height/2+2),new p.Vector3(-.5,-.5,-.5),(0,p.Tools).ToRadians(50),10,e);i.diffuse=new p.Color3(.9,.8,.7),i.specular=new p.Color3(.3,.2,.3),i.intensity=.9,i.shadowEnabled=!0;let l=new p.ShadowGenerator(1024,o);l.usePoissonSampling=!0,l.useExponentialShadowMap=!0,l.useBlurExponentialShadowMap=!0;let r=new p.ShadowGenerator(1024,s);r.usePoissonSampling=!0,r.useExponentialShadowMap=!0,r.useBlurExponentialShadowMap=!0;let d=new p.ShadowGenerator(1024,i);return d.usePoissonSampling=!0,d.useExponentialShadowMap=!0,d.useBlurExponentialShadowMap=!0,[t,o,[l,r,d]]}(a)];n.GameState.state.gameObjects.globalTransformNode=new p.TransformNode("global-transform-node",a),n.GameState.state.gameObjects.worldNode=function(e){let t=new p.TransformNode("world-transform-node",e),a=(0,p.MeshBuilder).CreateGround("ground",{width:(0,n.GameState).gameBox().width,height:(0,n.GameState).gameBox().height,updatable:!0},e);a.receiveShadows=!0;let o=new p.StandardMaterial(`${a.name}-mt`,e);o.diffuseColor=new p.Color3(.21,.19,.21),o.maxSimultaneousLights=10,a.material=o;let s=(0,p.MeshBuilder).CreateBox("left-wall",{width:.1,height:4,depth:(0,n.GameState).gameBox().height,updatable:!0},e);s.position=new p.Vector3(-(0,n.GameState).gameBox().width/2,2,0);let i=new p.StandardMaterial("wall-mt",e);i.diffuseColor=new p.Color3(.3,.25,.35),i.alpha=.5,s.material=i;let l=s.clone("right-wall",t,!0,!1);l.position=new p.Vector3((0,n.GameState).gameBox().width/2,2,0);let r=(0,p.MeshBuilder).CreateBox("up-wall",{width:(0,n.GameState).gameBox().width,height:4,depth:.1,updatable:!0},e);r.position=new p.Vector3(0,2,(0,n.GameState).gameBox().height/2),r.material=i,a.parent=t,s.parent=t,l.parent=t,r.parent=t,t.position.x-=.2;let d=new p.PhysicsBody(a,p.PhysicsMotionType.STATIC,!1,e),c=new p.PhysicsShapeConvexHull(a,e);c.filterMembershipMask=(0,n.GameState).CldMasks().ground,c.filterCollideMask=(0,n.GameState).CldMasks().groups.ground,c.material={restitution:n.GameState.state.physicsMaterial.ground.restitution,friction:n.GameState.state.physicsMaterial.ground.friction},d.shape=c;let m=new p.PhysicsBody(l,p.PhysicsMotionType.STATIC,!1,e),h=new p.PhysicsShapeConvexHull(l,e);h.filterMembershipMask=(0,n.GameState).CldMasks().ground,h.filterCollideMask=(0,n.GameState).CldMasks().groups.ground,h.material={restitution:n.GameState.state.physicsMaterial.wall.restitution,friction:n.GameState.state.physicsMaterial.wall.friction},m.shape=h;let g=new p.PhysicsBody(s,p.PhysicsMotionType.STATIC,!1,e),w=new p.PhysicsShapeConvexHull(s,e);w.filterMembershipMask=(0,n.GameState).CldMasks().ground,w.filterCollideMask=(0,n.GameState).CldMasks().groups.ground,w.material={restitution:n.GameState.state.physicsMaterial.wall.restitution,friction:n.GameState.state.physicsMaterial.wall.friction},g.shape=w;let u=new p.PhysicsBody(r,p.PhysicsMotionType.STATIC,!1,e),S=new p.PhysicsShapeConvexHull(r,e);return S.filterMembershipMask=(0,n.GameState).CldMasks().ground,S.filterCollideMask=(0,n.GameState).CldMasks().groups.ground,S.material={restitution:n.GameState.state.physicsMaterial.wall.restitution,friction:n.GameState.state.physicsMaterial.wall.friction},u.shape=S,t}(a);let[G,C,f]=(0,c.shildComposition)(a);n.GameState.state.gameObjects.scene=a,n.GameState.state.gameObjects.camera=o,n.GameState.state.gameObjects.damageNodes=[],n.GameState.state.gameObjects.shield_node=G,n.GameState.state.gameObjects.shield_body=C,n.GameState.state.gameObjects.ball=(0,i.ballComposition)(a),n.GameState.state.gameObjects.shadow=S,n.GameState.state.gameObjects.physicsHelper=new p.PhysicsHelper(a),n.GameState.state.gameObjects.points=(0,d.initPoints)(a),(0,p.MeshBuilder).CreateLines("up-line",{points:[new p.Vector3(n.GameState.state.dragBox.left,.1,n.GameState.state.dragBox.up),new p.Vector3(0,.1,n.GameState.state.dragBox.up),new p.Vector3(n.GameState.state.dragBox.rigth,.1,n.GameState.state.dragBox.up)],colors:[new p.Color4(.3,.5,.5,1),new p.Color4(.9,.5,.5,1),new p.Color4(.3,.5,.5,1)]},n.GameState.state.gameObjects.scene),(0,p.MeshBuilder).CreateLines("down-line",{points:[new p.Vector3(n.GameState.state.dragBox.left,.1,n.GameState.state.dragBox.down),new p.Vector3(0,.1,n.GameState.state.dragBox.down),new p.Vector3(n.GameState.state.dragBox.rigth,.1,n.GameState.state.dragBox.down)],colors:[new p.Color4(.3,.5,.5,1),new p.Color4(.9,.5,.5,1),new p.Color4(.3,.5,.5,1)]},n.GameState.state.gameObjects.scene),(0,i.addShadowToBall)(S,a),s.AGAME.Scene=a;let b=!1;a.detachControl(),setTimeout(()=>{a.attachControl()},300),(0,c.addPosition$)(()=>{}),s.AGAME.Scene.onPointerDown=(e,t,a)=>{(function(e,t,a){let o=a.pick(a.pointerX,a.pointerY,()=>!0);(0,g.clampToBoxShieldPosition)(o.pickedPoint,t,1),n.GameState.state.isDragShield=!0})(0,(0,n.GameState).shieldNode(),s.AGAME.Scene)},s.AGAME.Scene.onPointerUp=(e,t,a)=>{var o;s.AGAME.Scene,n.GameState.state.isDragShield&&(n.GameState.state.isDragShield=!1,(0,i.onRun$)())},s.AGAME.Scene.onPointerMove=(e,t,a)=>{(function(e,t,a){if(n.GameState.state.isDragShield){let e=a.pick(a.pointerX,a.pointerY,()=>!0);(0,g.clampToBoxShieldPosition)(e.pickedPoint,t,1)}})(0,(0,n.GameState).shieldNode(),s.AGAME.Scene)},(0,s.AGAME).Scene.onBeforeRenderObservable.add(()=>{n.GameState.state.isBallStart||(0,n.GameState).state.gameObjects.ball.getPhysicsBody().setTargetTransform((0,n.GameState).shieldNode().position.clone().add(new p.Vector3(0,0,.7)),(0,p.Quaternion).Identity()),(0,s.AGAME).HVK.setTargetTransform((0,n.GameState).shieldBody().getPhysicsBody(),(0,n.GameState).shieldNode().position,(0,p.Quaternion).Identity())}),(0,s.AGAME).HVK.onCollisionObservable.add((e,t)=>{if(n.GameState.state.gameState===n.GameState.state.signals.GAME_RUN){let t=e.collider.transformNode,a=e.collidedAgainst.transformNode;a.name.includes("rocket")?t.name.includes("enemy-bloc")&&(u(t,a),(0,g.playGameSound)("rocket-explode")):t.name.includes("rocket")&&a.name.includes("enemy-bloc")&&(u(a,t),(0,g.playGameSound)("rocket-explode")),t.name.includes("ball")&&a.name.includes("wall")&&(0,g.playGameSound)("ball-wall"),t.name.includes("ball")&&a.name.includes("enemy-bloc")&&(0,g.playGameSound)("ball-enemy")}}),(0,s.AGAME).HVK.onCollisionEndedObservable.add((e,t)=>{let a=e.collider.transformNode,o=e.collidedAgainst.transformNode;if(n.GameState.state.gameState===n.GameState.state.signals.GAME_RUN&&!n.GameState.state.isResetBall&&("ball"===o.name||"ball"===a.name)&&o.name.includes("enemy-bloc")&&((0,i.addVelocityBall)(),(0,r.enemyCollideReaction)(o),(0,h.calculatePoints)(o),(0,g.isLEVEL_WIN)()),!b&&a.name.includes("ball")&&o.name.includes("wall")){let e=a.physicsBody.getLinearVelocity().multiply(new p.Vector3(1,0,1)).normalize(),t=new p.Vector3(0,0,1);o.name.includes("left")?t=new p.Vector3(0,0,1):o.name.includes("right")?t=new p.Vector3(0,0,1):o.name.includes("up")&&(t=new p.Vector3(1,0,0));let s=(0,p.Vector3).Cross(e,t).normalize(),i=(0,p.Vector3).GetAngleBetweenVectors(e,t,s);Math.ceil((0,p.Tools).ToDegrees(i))>80&&100>Math.ceil((0,p.Tools).ToDegrees(i))&&console.log("Correct ball Angle"),b=!0,(0,p.setAndStartTimer)({timeout:100,contextObservable:(0,n.GameState).scene().onBeforeRenderObservable,onEnded:()=>b=!1})}})}function u(e,t){(0,r.enemyDamageModelEffect)(e),(0,l.rocketDie)(t),(0,g.isLEVEL_WIN)()}}),a("7E4Px",function(a,o){e(a.exports,"shildComposition",()=>l),e(a.exports,"addPosition$",()=>r);var n=t("dHlpp"),s=t("iGzOG");let i={mass:100,restitution:.5,friction:1,position:new s.Vector3(0,.3,-9)};function l(e){let t=new s.TransformNode("shield-transform-node",e),a=function(e,t){let a=(0,s.MeshBuilder).CreateBox("shield",{width:3.5,height:.6,depth:.25,wrap:!0,updatable:!0},e);a.parent=t,a.receiveShadows=!0;let o=new s.StandardMaterial("shield-mt",e);o.emissiveColor=new s.Color3(.7,.5,.1),o.alpha=.8,o.maxSimultaneousLights=10,a.material=o;let l=new s.PhysicsBody(a,s.PhysicsMotionType.ANIMATED,!1,e);l.setMassProperties({mass:i.mass});let r=new s.PhysicsShapeConvexHull(a,e);r.filterMembershipMask=(0,n.GameState).CldMasks().shield,r.filterCollideMask=(0,n.GameState).CldMasks().groups.shield,r.material={restitution:i.restitution,friction:i.friction},l.shape=r,l.setCollisionCallbackEnabled(!0),l.setCollisionEndedCallbackEnabled(!0);let d=new s.GlowLayer("Shield-Glow",(0,n.GameState).scene());return d.addIncludedOnlyMesh(a),d.intensity=3,a}(e,t),o=function(e,t){let a=(0,s.MeshBuilder).CreatePlane("shield-control-plane",{width:5.5,height:2.5,updatable:!0},e);a.position=new s.Vector3(0,.7,-.5),a.parent=t,a.isPickable=!0,a.rotation.x=(0,s.Tools).ToRadians(90);let o=new s.StandardMaterial("shield-mt",e);return o.diffuseColor=new s.Color3(.1,.1,.1),o.alpha=0,a.material=o,a}(e,t);return t.position=i.position,t.position$=new s.Observable,[t,a,o]}function r(e){(0,n.GameState).shieldNode().position$.add(()=>{e()})}}),a("i2eR4",function(a,o){e(a.exports,"cameraController",()=>s);var n=t("iGzOG");function s(e,t){t.onKeyboardObservable.add(t=>{switch(t.event.key){case"m":e.fovMode=n.Camera.ORTHOGRAPHIC_CAMERA;break;case"w":e.position.z+=.1,console.log("CameraPosZ: ",e.position.z);break;case"s":e.position.z-=.1,console.log("CameraPosZ: ",e.position.z);break;case"a":e.position.y+=1,console.log("CameraPosY: ",e.position.y);break;case"d":e.position.y-=1,console.log("CameraPosY: ",e.position.y);break;case"q":e.fov+=(0,n.Tools).ToRadians(1),console.log("CameraFOV: ",e.fov);break;case"e":e.fov-=(0,n.Tools).ToRadians(1),console.log("CameraFOV: ",e.fov);break;case"z":e.setTarget(e.getTarget().clone().add(new n.Vector3(0,0,.1))),console.log("CameraTarget: ",e.getTarget());break;case"x":e.setTarget(e.getTarget().clone().add(new n.Vector3(0,0,-.1))),console.log("CameraTarget: ",e.getTarget());break;case"c":e.setTarget(e.getTarget().clone().add(new n.Vector3(0,.1,0))),console.log("CameraTarget: ",e.getTarget());break;case"v":e.setTarget(e.getTarget().clone().add(new n.Vector3(0,-.1,0))),console.log("CameraTarget: ",e.getTarget())}})}});